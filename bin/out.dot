digraph G {
graph [ordering="out"];

node1 [ label = "numeric" ]; 
node2 [ label = "Token \n INT" ]; 
node1 -> node2;
node3 [ label = "literal" ]; 
node3 -> node1;
node4 [ label = "basic_expr" ]; 
node4 -> node3;
node5 [ label = "l1_expr" ]; 
node5 -> node4;
node6 [ label = "l2_expr" ]; 
node6 -> node5;
node7 [ label = "l3_expr" ]; 
node7 -> node6;
node8 [ label = "l4_expr" ]; 
node9 [ label = "Token \n -" ]; 
node8 -> node9;
node8 -> node7;
node10 [ label = "l5_expr" ]; 
node10 -> node8;
node11 [ label = "l6_expr" ]; 
node11 -> node10;
node12 [ label = "l7_expr" ]; 
node12 -> node11;
node13 [ label = "l8_expr" ]; 
node13 -> node12;
node14 [ label = "l9_expr" ]; 
node14 -> node13;
node15 [ label = "l10_expr" ]; 
node15 -> node14;
node16 [ label = "l11_expr" ]; 
node16 -> node15;
node17 [ label = "l12_expr" ]; 
node17 -> node16;
node18 [ label = "numeric" ]; 
node19 [ label = "Token \n FLOAT" ]; 
node18 -> node19;
node20 [ label = "literal" ]; 
node20 -> node18;
node21 [ label = "basic_expr" ]; 
node21 -> node20;
node22 [ label = "l1_expr" ]; 
node22 -> node21;
node23 [ label = "l2_expr" ]; 
node23 -> node22;
node24 [ label = "l3_expr" ]; 
node24 -> node23;
node25 [ label = "l4_expr" ]; 
node25 -> node24;
node26 [ label = "l5_expr" ]; 
node26 -> node25;
node27 [ label = "l6_expr" ]; 
node27 -> node26;
node28 [ label = "l7_expr" ]; 
node28 -> node27;
node29 [ label = "l8_expr" ]; 
node29 -> node28;
node30 [ label = "l9_expr" ]; 
node30 -> node29;
node31 [ label = "l10_expr" ]; 
node31 -> node30;
node32 [ label = "op_eq" ]; 
node33 [ label = "Token \n EQEQUAL" ]; 
node32 -> node33;
node34 [ label = "user_var" ]; 
node35 [ label = "Token \n LOCALVAR" ]; 
node34 -> node35;
node36 [ label = "basic_expr" ]; 
node36 -> node34;
node37 [ label = "l1_expr" ]; 
node37 -> node36;
node38 [ label = "l2_expr" ]; 
node39 [ label = "Token \n !" ]; 
node38 -> node39;
node38 -> node37;
node40 [ label = "l3_expr" ]; 
node40 -> node38;
node41 [ label = "l4_expr" ]; 
node41 -> node40;
node42 [ label = "l5_expr" ]; 
node42 -> node41;
node43 [ label = "l6_expr" ]; 
node43 -> node42;
node44 [ label = "l7_expr" ]; 
node44 -> node43;
node45 [ label = "l8_expr" ]; 
node45 -> node44;
node46 [ label = "l9_expr" ]; 
node46 -> node45;
node47 [ label = "l10_expr" ]; 
node47 -> node46;
node48 [ label = "l11_expr" ]; 
node48 -> node31;
node48 -> node32;
node48 -> node47;
node49 [ label = "l12_expr" ]; 
node49 -> node48;
node50 [ label = "l13_expr" ]; 
node50 -> node49;
node51 [ label = "range_expr" ]; 
node51 -> node50;
node52 [ label = "assign_expr1" ]; 
node52 -> node51;
node53 [ label = "expr" ]; 
node53 -> node52;
node54 [ label = "l1_expr" ]; 
node55 [ label = "Token \n )" ]; 
node56 [ label = "Token \n (" ]; 
node54 -> node56;
node54 -> node53;
node54 -> node55;
node57 [ label = "l2_expr" ]; 
node57 -> node54;
node58 [ label = "user_var" ]; 
node59 [ label = "Token \n LOCALVAR" ]; 
node58 -> node59;
node60 [ label = "basic_expr" ]; 
node60 -> node58;
node61 [ label = "l1_expr" ]; 
node61 -> node60;
node62 [ label = "l2_expr" ]; 
node63 [ label = "Token \n !" ]; 
node62 -> node63;
node62 -> node61;
node64 [ label = "l3_expr" ]; 
node64 -> node62;
node65 [ label = "l4_expr" ]; 
node65 -> node64;
node66 [ label = "l5_expr" ]; 
node66 -> node65;
node67 [ label = "l6_expr" ]; 
node67 -> node66;
node68 [ label = "numeric" ]; 
node69 [ label = "Token \n INT" ]; 
node68 -> node69;
node70 [ label = "literal" ]; 
node70 -> node68;
node71 [ label = "basic_expr" ]; 
node71 -> node70;
node72 [ label = "l1_expr" ]; 
node72 -> node71;
node73 [ label = "l2_expr" ]; 
node73 -> node72;
node74 [ label = "l3_expr" ]; 
node74 -> node73;
node75 [ label = "l4_expr" ]; 
node75 -> node74;
node76 [ label = "l5_expr" ]; 
node76 -> node75;
node77 [ label = "l6_expr" ]; 
node78 [ label = "Token \n +" ]; 
node77 -> node67;
node77 -> node78;
node77 -> node76;
node79 [ label = "l7_expr" ]; 
node79 -> node77;
node80 [ label = "l8_expr" ]; 
node80 -> node79;
node81 [ label = "l9_expr" ]; 
node81 -> node80;
node82 [ label = "l10_expr" ]; 
node82 -> node81;
node83 [ label = "l11_expr" ]; 
node83 -> node82;
node84 [ label = "l12_expr" ]; 
node84 -> node83;
node85 [ label = "l13_expr" ]; 
node85 -> node84;
node86 [ label = "range_expr" ]; 
node86 -> node85;
node87 [ label = "assign_expr1" ]; 
node87 -> node86;
node88 [ label = "expr" ]; 
node88 -> node87;
node89 [ label = "l1_expr" ]; 
node90 [ label = "Token \n )" ]; 
node91 [ label = "Token \n (" ]; 
node89 -> node91;
node89 -> node88;
node89 -> node90;
node92 [ label = "l2_expr" ]; 
node92 -> node89;
node93 [ label = "l3_expr" ]; 
node93 -> node92;
node94 [ label = "l3_expr" ]; 
node95 [ label = "Token \n POW" ]; 
node94 -> node57;
node94 -> node95;
node94 -> node93;
node96 [ label = "l4_expr" ]; 
node96 -> node94;
node97 [ label = "l5_expr" ]; 
node97 -> node96;
node98 [ label = "l6_expr" ]; 
node98 -> node97;
node99 [ label = "numeric" ]; 
node100 [ label = "Token \n FLOAT" ]; 
node99 -> node100;
node101 [ label = "literal" ]; 
node101 -> node99;
node102 [ label = "basic_expr" ]; 
node102 -> node101;
node103 [ label = "l1_expr" ]; 
node103 -> node102;
node104 [ label = "l2_expr" ]; 
node104 -> node103;
node105 [ label = "l3_expr" ]; 
node105 -> node104;
node106 [ label = "l4_expr" ]; 
node107 [ label = "Token \n -" ]; 
node106 -> node107;
node106 -> node105;
node108 [ label = "l5_expr" ]; 
node108 -> node106;
node109 [ label = "l6_expr" ]; 
node110 [ label = "Token \n -" ]; 
node109 -> node98;
node109 -> node110;
node109 -> node108;
node111 [ label = "numeric" ]; 
node112 [ label = "Token \n INT" ]; 
node111 -> node112;
node113 [ label = "literal" ]; 
node113 -> node111;
node114 [ label = "basic_expr" ]; 
node114 -> node113;
node115 [ label = "l1_expr" ]; 
node115 -> node114;
node116 [ label = "l2_expr" ]; 
node116 -> node115;
node117 [ label = "l3_expr" ]; 
node117 -> node116;
node118 [ label = "l4_expr" ]; 
node118 -> node117;
node119 [ label = "l5_expr" ]; 
node119 -> node118;
node120 [ label = "l6_expr" ]; 
node121 [ label = "Token \n +" ]; 
node120 -> node109;
node120 -> node121;
node120 -> node119;
node122 [ label = "l7_expr" ]; 
node122 -> node120;
node123 [ label = "l8_expr" ]; 
node123 -> node122;
node124 [ label = "l9_expr" ]; 
node124 -> node123;
node125 [ label = "l10_expr" ]; 
node125 -> node124;
node126 [ label = "l11_expr" ]; 
node126 -> node125;
node127 [ label = "l12_expr" ]; 
node128 [ label = "Token \n AND" ]; 
node127 -> node17;
node127 -> node128;
node127 -> node126;
node129 [ label = "l13_expr" ]; 
node129 -> node127;
node130 [ label = "range_expr" ]; 
node130 -> node129;
node131 [ label = "assign_expr1" ]; 
node131 -> node130;
node132 [ label = "expr" ]; 
node132 -> node131;
node133 [ label = "stmt" ]; 
node133 -> node132;
node134 [ label = "stmts" ]; 
node134 -> node133;
node135 [ label = "lin_term" ]; 
node136 [ label = "Token \n NEWLINE" ]; 
node135 -> node136;
node137 [ label = "lin_terms" ]; 
node137 -> node135;
node138 [ label = "literal" ]; 
node139 [ label = "Token \n STRING" ]; 
node138 -> node139;
node140 [ label = "basic_expr" ]; 
node140 -> node138;
node141 [ label = "l1_expr" ]; 
node141 -> node140;
node142 [ label = "l2_expr" ]; 
node142 -> node141;
node143 [ label = "l3_expr" ]; 
node143 -> node142;
node144 [ label = "l4_expr" ]; 
node144 -> node143;
node145 [ label = "l5_expr" ]; 
node145 -> node144;
node146 [ label = "l6_expr" ]; 
node146 -> node145;
node147 [ label = "literal" ]; 
node148 [ label = "Token \n STRING" ]; 
node147 -> node148;
node149 [ label = "basic_expr" ]; 
node149 -> node147;
node150 [ label = "l1_expr" ]; 
node150 -> node149;
node151 [ label = "l2_expr" ]; 
node151 -> node150;
node152 [ label = "l3_expr" ]; 
node152 -> node151;
node153 [ label = "l4_expr" ]; 
node153 -> node152;
node154 [ label = "l5_expr" ]; 
node154 -> node153;
node155 [ label = "numeric" ]; 
node156 [ label = "Token \n INT" ]; 
node155 -> node156;
node157 [ label = "literal" ]; 
node157 -> node155;
node158 [ label = "basic_expr" ]; 
node158 -> node157;
node159 [ label = "l1_expr" ]; 
node159 -> node158;
node160 [ label = "l2_expr" ]; 
node160 -> node159;
node161 [ label = "l3_expr" ]; 
node161 -> node160;
node162 [ label = "l4_expr" ]; 
node162 -> node161;
node163 [ label = "l5_expr" ]; 
node164 [ label = "Token \n *" ]; 
node163 -> node154;
node163 -> node164;
node163 -> node162;
node165 [ label = "l6_expr" ]; 
node166 [ label = "Token \n +" ]; 
node165 -> node146;
node165 -> node166;
node165 -> node163;
node167 [ label = "l7_expr" ]; 
node167 -> node165;
node168 [ label = "numeric" ]; 
node169 [ label = "Token \n INT" ]; 
node168 -> node169;
node170 [ label = "literal" ]; 
node170 -> node168;
node171 [ label = "basic_expr" ]; 
node171 -> node170;
node172 [ label = "l1_expr" ]; 
node172 -> node171;
node173 [ label = "l2_expr" ]; 
node173 -> node172;
node174 [ label = "l3_expr" ]; 
node174 -> node173;
node175 [ label = "l4_expr" ]; 
node175 -> node174;
node176 [ label = "l5_expr" ]; 
node176 -> node175;
node177 [ label = "l6_expr" ]; 
node177 -> node176;
node178 [ label = "l7_expr" ]; 
node179 [ label = "Token \n RSHIFT" ]; 
node178 -> node167;
node178 -> node179;
node178 -> node177;
node180 [ label = "l8_expr" ]; 
node180 -> node178;
node181 [ label = "l9_expr" ]; 
node181 -> node180;
node182 [ label = "l10_expr" ]; 
node182 -> node181;
node183 [ label = "l11_expr" ]; 
node183 -> node182;
node184 [ label = "l12_expr" ]; 
node184 -> node183;
node185 [ label = "l13_expr" ]; 
node185 -> node184;
node186 [ label = "range_expr" ]; 
node186 -> node185;
node187 [ label = "assign_expr1" ]; 
node187 -> node186;
node188 [ label = "expr" ]; 
node188 -> node187;
node189 [ label = "stmt" ]; 
node189 -> node188;
node190 [ label = "stmts" ]; 
node190 -> node134;
node190 -> node137;
node190 -> node189;
node191 [ label = "lin_term" ]; 
node192 [ label = "Token \n NEWLINE" ]; 
node191 -> node192;
node193 [ label = "lin_terms" ]; 
node193 -> node191;
node194 [ label = "opt_terms" ]; 
node194 -> node193;
node195 [ label = "compstmt" ]; 
node195 -> node190;
node195 -> node194;
node196 [ label = "program" ]; 
node196 -> node195;
}
